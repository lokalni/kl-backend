"""
Django settings for kl_backend project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
# import sentry_sdk

from decimal import Decimal as D
# from sentry_sdk.integrations.django import DjangoIntegration

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# App domain, i.e teleklasa.lokalni.pl
DOMAIN = env.str('DJ_DOMAIN')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('DJ_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DJ_DEBUG', default=False)

ALLOWED_HOSTS = env.list('DJ_ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    # django base
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 3rd party
    'rest_framework',
    'django_filters',
    'corsheaders',

    # project
    'kl_backend',
    'kl_participants',
    'kl_conferences',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'kl_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kl_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': env.db_url('DJ_DATABASES_DEFAULT_URL'),
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# CORS
# CORS_ORIGIN_WHITELIST = ['http://*', 'https://*']# env.list('DJ_CORS_ORIGIN_WHITELIST', default=[])
# FIXME - with whitelist there is no header in OPTIONS response, looks like lib bug
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
}

# --- Sentry.io

# DJ_SENTRY_DSN = env.str('DJ_SENTRY_DSN', None)

# if DJ_SENTRY_DSN: # config should be loaded only for production when DJ_SENTRY_DSN is set
#     sentry_sdk.init(
#         dsn=DJ_SENTRY_DSN,
#         integrations=[DjangoIntegration()],

#         # If you wish to associate users to errors (assuming you are using
#         # django.contrib.auth) you may enable sending PII data.
#         send_default_pii=True
#     )

# --- ACCESS PROTOCOL ---
# Domain whitelisted for nodes registration
BBB_DOMAIN_ALLOWED = env.str('DJ_BBB_DOMAIN_ALLOWED', default='.lokalni.pl')


# --- CONFERENCE SETTINGS ---
# Number of servers to try when starting new lesson before failure
NEW_LESSON_TRY_SERVERS_CNT = env.int('DJ_NEW_LESSON_TRY_SERVERS_CNT', default=2)
# Number of allowed active student sessions per access token.
MAX_STUDENT_TOKEN_SESSIONS = env.int('DJ_MAX_STUDENT_TOKEN_SESSIONS', default=2)


# --- SERVER NODE SETTINGS ---
# Servers with last heartbeat older than X seconds are excluded from pool
MAX_HEARTBEAT_DELAY = env.int('DJ_MAX_STUDENT_TOKEN_SESSIONS', default=5 * 60)
# How much load is too high to consider same region preferred
MAX_SAME_REGION_LOAD_PER_CPU = D(env.str('DJ_MAX_STUDENT_TOKEN_SESSIONS', default='0.82137'))
